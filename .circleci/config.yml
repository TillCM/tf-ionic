version: 2.1
jobs:
  build:
    working_directory: ~/dev/ionic-test
    docker:
      - image: cimg/node:16.14
    steps:
      - checkout

       
      - run:
          name: update-npm
          command: "sudo npm install -g npm@latest"
      - restore_cache:
          key: depdendency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install-packages
          command: npm install
      - save_cache:
          key: depdendency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
     
      - run:
          name: list files
          command: ls -l

  android-build-and-test:
    working_directory: ~/dev/ionic-test

    
    docker:
      - image: cimg/android:2022.01.1-node
    steps:
      - checkout:
         path: ~/dev/ionic-test
          
      - attach_workspace:
         at: ~/dev/ionic-test

      - run:
         name: install-packages
         command: | 
         
          npm install

      - restore_cache:
         key: node-v1-{{ checksum "package.json" }}-{{ arch }}   

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules


      - run:
          name: install ionic cli
          command: |

          
           sudo npm install -g @ionic/cli
         
            sudo which ionic
            sudo ionic build
            sudo ionic cap add android
            sudo ionic cap copy android 
            sudo ionic cap copy
            sudo ionic cap sync
      - run:
          name: list files
          command: ls -l    

      - run:
          name: chmod permissions
          
          command: | 
           cd android && sudo chmod +x ./gradlew
           ls -l

      - run:
          name: Download Dependencies

          command:  cd android && sudo ./gradlew androidDependencies

    
           
      - run:
         name: Run Lindt Test
         command: |
            export ANDROID_HOME=$HOME/Android/Sdk
            export PATH=$PATH:$ANDROID_HOME/tools
            export PATH=$PATH:$ANDROID_HOME/platform-tools
            export ANDROID_SDK_ROOT=$HOME/Android/Sdk
            env
            cd android && sudo ./gradlew lint test    
      - store_artifacts:
           path: android/app/build/reports
           destination: reports
      - store_test_results:
           path: android/app/build/test-results   

      - run:
          name: Assemble release build
          command: |
           cd android && sudo  ./gradlew assembleRelease --no-daemon
       
      - store_artifacts:
        
          path: platforms/android/app/build/outputs/apk/debug
      
      - run:
          name: Assemble release Apk 
          command: |
            find .
            cd android && sudo  ./gradlew assembleRelease --no-daemon
            find .
      - store_artifacts:
        
          path: android/app/build/outputs/apk/release 

workflows:
  ionic-test:
    jobs:
      - build
      - android-build-and-test:
          requires:
            - build
            